---
AWSTemplateFormatVersion: '2010-09-09'
Parameters:
  AppName:
    Type: String
  StagingBucket:
    Type: String
  RepoOwner:
    Type: String
  RepoName:
    Type: String
  RepoBranch:
    Type: String
  RepoPAT:
    Type: String
  CodeBuildBuildSpec:
    Type: String
  CodeBuildType:
    Type: String
    Default: LINUX_CONTAINER
  CodeBuildComputeType:
    Type: String
    Default: BUILD_GENERAL1_SMALL
  CodeBuildImage:
    Type: String
    Default: aws/codebuild/standard:4.0
  LambdaHandler:
    Type: String
    Default: "index.handler"
  LambdaMemory:
    Type: Number
    Default: 128
  LambdaTimeout:
    Type: Number
    Default: 30
  LambdaRuntime:
    Type: String
    Default: python3.8
Resources:
  CodeBuildProject:
    DependsOn:
      - CodeBuildSourceCredential
    Properties:
      Environment:
        ComputeType:
          Ref: CodeBuildComputeType
        Image:
          Ref: CodeBuildImage
        Type:
          Ref: CodeBuildType
      Name:
        Ref: AppName
      ServiceRole:
        Fn::GetAtt:
          - CodeBuildRole
          - Arn
      Source:
        Location:
          Fn::Sub:
            - "https://github.com/${repo_owner}/${repo_name}.git"
            - repo_owner:
                Ref: RepoOwner
              repo_name:
                Ref: RepoName
        Type: GITHUB
        BuildSpec:
          Fn::Sub:
            - "${build_spec}"
            - build_spec:
                Ref: CodeBuildBuildSpec
      Artifacts:
        Type: S3
        Location:
          Ref: StagingBucket
      SourceVersion:
        Ref: RepoBranch
      Triggers:
        Webhook: true
        FilterGroups:
          - - Type: EVENT
              Pattern: PUSH
              ExcludeMatchedPattern: false
            - Type: HEAD_REF
              Pattern: "refs/tags/.*"
              ExcludeMatchedPattern: false
    Type: AWS::CodeBuild::Project
  CodeBuildSourceCredential:
    Type: AWS::CodeBuild::SourceCredential
    Properties:
      Token:
        Ref: RepoPAT
      ServerType: GITHUB
      AuthType: PERSONAL_ACCESS_TOKEN
  CodeBuildRole:
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
        Version: '2012-10-17'
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AdministratorAccess
      Path: /
    Type: AWS::IAM::Role
  CodeBuildNotificationFunction:
    Properties:
      Code:
        ZipFile: "def handler(event, context):\n  print (event)"
      Handler:
        Ref: LambdaHandler
      MemorySize:
        Ref: LambdaMemory
      Role:
        Fn::GetAtt:
          - CodeBuildNotificationFunctionRole
          - Arn
      Runtime:
        Ref: LambdaRuntime
      Timeout:
        Ref: LambdaTimeout
    Type: AWS::Lambda::Function
  CodeBuildNotificationFunctionRole:
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: '2012-10-17'
      Policies:
        - PolicyDocument:
            Statement:
              - Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Effect: Allow
                Resource: '*'
            Version: '2012-10-17'
          PolicyName: code-build-notification-role-policy
    Type: AWS::IAM::Role
  CodeBuildNotificationFunctionInvokePermission:
    Properties:
      Action: "lambda:InvokeFunction"
      FunctionName:
        Ref: CodeBuildNotificationFunction
      Principal: "sns.amazonaws.com"
      SourceArn:
        Ref: CodeBuildNotificationTopic
    Type: AWS::Lambda::Permission
  CodeBuildNotificationTopic:
    Properties:
      Subscription:
        - Protocol: lambda
          Endpoint:
            Fn::GetAtt:
              - CodeBuildNotificationFunction
              - Arn
    Type: AWS::SNS::Topic
  CodeBuildNotificationTopicPolicy:
    Properties:
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: "events.amazonaws.com"
            Action:
              - "sns:GetTopicAttributes"
              - "sns:ListSubscriptionsByTopic"
              - "sns:Publish"
              - "sns:SetTopicAttributes"
              - "sns:Subscribe"
            Resource:
              Ref: CodeBuildNotificationTopic
      Topics:
        - Ref: CodeBuildNotificationTopic
    Type: AWS::SNS::TopicPolicy
  CloudWatchEventRule:
    Type: AWS::Events::Rule
    Properties:
      EventPattern:
        Fn::Sub:
          - '{"source": ["aws.codebuild"], "detail-type": ["CodeBuild Build Phase Change"], "detail": {"completed-phase": ["SUBMITTED", "PROVISIONING", "DOWNLOAD_SOURCE", "INSTALL", "PRE_BUILD", "BUILD", "POST_BUILD", "UPLOAD_ARTIFACTS", "FINALIZING"], "completed-phase-status": ["TIMED_OUT", "STOPPED", "FAILED", "SUCCEEDED", "FAULT", "CLIENT_ERROR"], "project-name": ["${project_name}"]}}'
          - project_name:
              Ref: CodeBuildProject
      State: ENABLED
      RoleArn:
        Fn::GetAtt:
          - CloudWatchEventRuleRole
          - Arn
      Targets:
        - Arn:
            Ref: CodeBuildNotificationTopic
          Id:
            Fn::Sub:
              - "${project_name}-codebuild-notifications"
              - project_name:
                  Ref: CodeBuildProject
          InputTransformer:
            InputPathsMap:
              build-id: "$.detail.build-id"
              project-name: "$.detail.project-name"
              completed-phase: "$.detail.completed-phase"
              completed-phase-status: "$.detail.completed-phase-status"
            InputTemplate: |
              "Build '<build-id>' for build project '<project-name>' has completed the build phase of '<completed-phase>' with a status of '<completed-phase-status>'."
  CloudWatchEventRuleRole:
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: events.amazonaws.com
        Version: '2012-10-17'
      Policies:
        - PolicyDocument:
            Statement:
              - Action:
                  - "sns:*"
                Effect: Allow
                Resource: '*'
            Version: '2012-10-17'
          PolicyName: cloudwatch-event-rule-role-policy
    Type: AWS::IAM::Role
